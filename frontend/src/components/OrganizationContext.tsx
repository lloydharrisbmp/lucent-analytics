// This file is being replaced by OrganizationContextProvider.tsx\n// Keeping it for reference but not exporting anything to avoid conflicts\n\n// Original content remains as comments for historical reference\n/*\nimport React from 'react';\nimport { createContext, useContext } from 'react';\nimport { useOrganizationStore } from 'utils/organizationStore';\n\n// Super minimal context implementation\nconst OrganizationContext = createContext(null);\n\n// Hook to use the context\nexport function useOrganizationContext() {\n  return useContext(OrganizationContext);\n}\n\n// Provider component\nexport function OrganizationProvider({ children }) {\n  const store = useOrganizationStore();\n  \n  // Find current organization\n  const currentOrganization = store.organizations.find(\n    (org) => org.id === store.currentOrganizationId\n  ) || null;\n  \n  // Create value\n  const value = {\n    organizations: store.organizations,\n    currentOrganization,\n    setCurrentOrganization: store.setCurrentOrganization,\n    isLoading: store.isLoading,\n    error: store.error,\n  };\n\n  return (\n    <OrganizationContext.Provider value={value}>\n      {children}\n    </OrganizationContext.Provider>\n  );\n}\n*/